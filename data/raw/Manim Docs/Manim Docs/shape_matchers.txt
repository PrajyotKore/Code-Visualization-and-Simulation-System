shape_matchers
Mobjects used to mark and annotate other mobjects.

Classes

BackgroundRectangle

A background rectangle.

Cross

Creates a cross.

SurroundingRectangle

A rectangle surrounding a Mobject

Underline

Creates an underline.


BackgroundRectangle
Qualified name: manim.mobject.geometry.shape\_matchers.BackgroundRectangle

class BackgroundRectangle(*mobjects, color=None, stroke_width=0, stroke_opacity=0, fill_opacity=0.75, buff=0, **kwargs)[source]
Bases: SurroundingRectangle

A background rectangle. Its default color is the background color of the scene.

Examples

Example: ExampleBackgroundRectangle 

../_images/ExampleBackgroundRectangle-1.png
from manim import *

class ExampleBackgroundRectangle(Scene):
    def construct(self):
        circle = Circle().shift(LEFT)
        circle.set_stroke(color=GREEN, width=20)
        triangle = Triangle().shift(2 * RIGHT)
        triangle.set_fill(PINK, opacity=0.5)
        backgroundRectangle1 = BackgroundRectangle(circle, color=WHITE, fill_opacity=0.15)
        backgroundRectangle2 = BackgroundRectangle(triangle, color=WHITE, fill_opacity=0.15)
        self.add(backgroundRectangle1)
        self.add(backgroundRectangle2)
        self.add(circle)
        self.add(triangle)
        self.play(Rotate(backgroundRectangle1, PI / 4))
        self.play(Rotate(backgroundRectangle2, PI / 2))
Make interactive
Methods

get_fill_color

If there are multiple colors (for gradient) this returns the first one

pointwise_become_partial

Given a 2nd VMobject vmobject, a lower bound a and an upper bound b, modify this VMobject's points to match the portion of the Bézier spline described by vmobject.points with the parameter t between a and b.

set_style

Attributes

animate

Used to animate the application of any method of self.

animation_overrides

color

depth

The depth of the mobject.

fill_color

If there are multiple colors (for gradient) this returns the first one

height

The height of the mobject.

n_points_per_curve

sheen_factor

stroke_color

width

The width of the mobject.

Parameters:
mobjects (Mobject)

color (ParsableManimColor | None)

stroke_width (float)

stroke_opacity (float)

fill_opacity (float)

buff (float)

kwargs (Any)

_original__init__(*mobjects, color=None, stroke_width=0, stroke_opacity=0, fill_opacity=0.75, buff=0, **kwargs)
Initialize self. See help(type(self)) for accurate signature.

Parameters:
mobjects (Mobject)

color (ParsableManimColor | None)

stroke_width (float)

stroke_opacity (float)

fill_opacity (float)

buff (float)

kwargs (Any)

Return type:
None

get_fill_color()[source]
If there are multiple colors (for gradient) this returns the first one

Return type:
ManimColor

pointwise_become_partial(mobject, a, b)[source]
Given a 2nd VMobject vmobject, a lower bound a and an upper bound b, modify this VMobject’s points to match the portion of the Bézier spline described by vmobject.points with the parameter t between a and b.

Parameters:
vmobject – The VMobject that will serve as a model.

a (Any) – The lower bound for t.

b (float) – The upper bound for t

mobject (Mobject)

Returns:
The VMobject itself, after the transformation.

Return type:
VMobject

Raises:
TypeError – If vmobject is not an instance of VMobject.


Cross
Qualified name: manim.mobject.geometry.shape\_matchers.Cross

class Cross(mobject=None, stroke_color=ManimColor('#FC6255'), stroke_width=6.0, scale_factor=1.0, **kwargs)[source]
Bases: VGroup

Creates a cross.

Parameters:
mobject (Mobject | None) – The mobject linked to this instance. It fits the mobject when specified. Defaults to None.

stroke_color (ParsableManimColor) – Specifies the color of the cross lines. Defaults to RED.

stroke_width (float) – Specifies the width of the cross lines. Defaults to 6.

scale_factor (float) – Scales the cross to the provided units. Defaults to 1.

kwargs (Any)

Examples

Example: ExampleCross 

../_images/ExampleCross-1.png
from manim import *

class ExampleCross(Scene):
    def construct(self):
        cross = Cross()
        self.add(cross)
Make interactive
Methods

Attributes

animate

Used to animate the application of any method of self.

animation_overrides

color

depth

The depth of the mobject.

fill_color

If there are multiple colors (for gradient) this returns the first one

height

The height of the mobject.

n_points_per_curve

sheen_factor

stroke_color

width

The width of the mobject.

_original__init__(mobject=None, stroke_color=ManimColor('#FC6255'), stroke_width=6.0, scale_factor=1.0, **kwargs)
Initialize self. See help(type(self)) for accurate signature.

Parameters:
mobject (Mobject | None)

stroke_color (ParsableManimColor)

stroke_width (float)

scale_factor (float)

kwargs (Any)

Return type:
None





SurroundingRectangle
Qualified name: manim.mobject.geometry.shape\_matchers.SurroundingRectangle

class SurroundingRectangle(*mobjects, color=ManimColor('#FFFF00'), buff=0.1, corner_radius=0.0, **kwargs)[source]
Bases: RoundedRectangle

A rectangle surrounding a Mobject

Examples

Example: SurroundingRectExample 

../_images/SurroundingRectExample-1.png
from manim import *

class SurroundingRectExample(Scene):
    def construct(self):
        title = Title("A Quote from Newton")
        quote = Text(
            "If I have seen further than others, \n"
            "it is by standing upon the shoulders of giants.",
            color=BLUE,
        ).scale(0.75)
        box = SurroundingRectangle(quote, color=YELLOW, buff=MED_LARGE_BUFF)

        t2 = Tex(r"Hello World").scale(1.5)
        box2 = SurroundingRectangle(t2, corner_radius=0.2)
        mobjects = VGroup(VGroup(box, quote), VGroup(t2, box2)).arrange(DOWN)
        self.add(title, mobjects)
Make interactive
Methods

Attributes

animate

Used to animate the application of any method of self.

animation_overrides

color

depth

The depth of the mobject.

fill_color

If there are multiple colors (for gradient) this returns the first one

height

The height of the mobject.

n_points_per_curve

sheen_factor

stroke_color

width

The width of the mobject.

Parameters:
mobjects (Mobject)

color (ParsableManimColor)

buff (float)

corner_radius (float)

kwargs (Any)

_original__init__(*mobjects, color=ManimColor('#FFFF00'), buff=0.1, corner_radius=0.0, **kwargs)
Initialize self. See help(type(self)) for accurate signature.

Parameters:
mobjects (Mobject)

color (ParsableManimColor)

buff (float)

corner_radius (float)

kwargs (Any)

Return type:
None





Underline
Qualified name: manim.mobject.geometry.shape\_matchers.Underline

class Underline(mobject, buff=0.1, **kwargs)[source]
Bases: Line

Creates an underline.

Examples

Example: UnderLine 

../_images/UnderLine-1.png
from manim import *

class UnderLine(Scene):
    def construct(self):
        man = Tex("Manim")  # Full Word
        ul = Underline(man)  # Underlining the word
        self.add(man, ul)
Make interactive
Methods

Attributes

animate

Used to animate the application of any method of self.

animation_overrides

color

depth

The depth of the mobject.

fill_color

If there are multiple colors (for gradient) this returns the first one

height

The height of the mobject.

n_points_per_curve

sheen_factor

stroke_color

width

The width of the mobject.

Parameters:
mobject (Mobject)

buff (float)

kwargs (Any)

_original__init__(mobject, buff=0.1, **kwargs)
Initialize self. See help(type(self)) for accurate signature.

Parameters:
mobject (Mobject)

buff (float)

kwargs (Any)

Return type:
None


